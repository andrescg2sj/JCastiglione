package org.sj.tools.jcastiglione;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Color;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.Vector;

/**
 * Button that holds a color.
 */
public class ColorButton extends Component implements MouseListener {
	public static final int SIZE = 20;
	public static final int GAP = 2;
	
	private Color selectedColor;
	
	/** 
	 * listeners of events generated by this button
	 */
	private Vector<ActionListener> listeners;


	public ColorButton() {
		setSize(SIZE, SIZE);
		addMouseListener(this);
		listeners = new Vector<ActionListener>(5, 5);
	}
	
	public void addActionListener(ActionListener al) {
		listeners.add(al);
	}
	
	public ColorButton(Color c) {
		this();
		setColor(c);
	}
	
	public void setColor(Color c) {
		selectedColor = c;
		for(int i=0; i<listeners.size(); i++) {
			ActionListener a = (ActionListener) listeners.get(i);
			a.actionPerformed(new ActionEvent(this, 0, "Color"));
		}
		repaint();
	}
	
	public Color getColor() {
		return selectedColor;
	}

	public void paint(Graphics g) {
		g.setColor(selectedColor);
		g.fillRect(GAP,GAP, SIZE-2*GAP-1, SIZE-2*GAP-1);

		g.setColor(Color.BLACK);		
		g.drawRect(GAP,GAP, SIZE-2*GAP-1, SIZE-2*GAP-1);
		g.drawRect(0,0, SIZE-1, SIZE-1);
	}
	
	public Dimension getPreferredSize() {
		return getSize();
	}
	
	public void mouseClicked(MouseEvent e) {
		//TODO: get Window frame
		ColorDlg c = new ColorDlg(new Frame(), this, "Color", true);
		c.setVisible(true);
	}
	public void	mouseEntered(MouseEvent e){;}
	public void	mouseExited(MouseEvent e){;}
	public void	mousePressed(MouseEvent e){;}
	public void	mouseReleased(MouseEvent e) 	{;}
}